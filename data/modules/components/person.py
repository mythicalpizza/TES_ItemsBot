from modules.components.enums.faction import Faction
from modules.components.enums.race import Race
from modules.components.enums.skillgroup import SkillGroup
from modules.components.enums.homecity import HomeCity

class Person():
    def __init__(self, name, race, faction, skillgroup = SkillGroup.COMBAT, homecity = HomeCity.RANDOM):
        self.name = name#Used to identify person
        self.race = race#Used to influence item origin and possible location data
        self.faction = list(faction)#Allows comparison between two NPC's that can be used to influence item purpose and naming, as well as objectives
        self.skillgroup = skillgroup#Can be leveraged to generate an item based on a particular need or proficiency based on character
        self.homecity = homecity#Allows more detail for locational data, such as for use in quest objectives
        """
        At this time I do not see a need to implement gender attributes, although I may do so in the future.
        It is already a very common bug in the ES games for an NPC to reference their own gender instead of the players and vice versa
        resulting in incorrect pronoun use during dialogue. Since many humorous bot results have historically been gender neutral,
        there is no reason to define a gender attribute as it would only be used for objective/quest pronouns,
        and all it would ensure is they're correct based on a given character's wiki page, effectively fixing a bug
        from the source games that perfectly compliments the absurdity of the items generated by this project.
        """
